# Protocol v1 is broken.
Protocol 2

# Specifies the available key exchange algorithms.
# 1. ECDH over Curve25519 with SHA256
# 2. Custom DH with SHA256 - generate primes using
#    ssh-keygen -G /tmp/moduli -b 4096
#    ssh-keygen -T /etc/ssh/moduli -f /tmp/moduli
KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256

# Server authentication
# 1. Ed25519 - generate key using 
#    ssh-keygen -t ed25519 -f ssh_host_ed25519_key < /dev/null
# 2. RSA - generate key using
#    ssh-keygen -t rsa -b 4096 -f ssh_host_rsa_key < /dev/null
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_rsa_key
KeyRegenerationInterval 3600

# Client authentication
ChallengeResponseAuthentication no
PasswordAuthentication no
PubkeyAuthentication yes
PermitRootLogin no
IgnoreRhosts yes
IgnoreUserKnownHosts yes
LoginGraceTime 60
AuthorizedKeysFile	%h/.ssh/authorized_keys
TCPKeepAlive yes

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

# Specifies the allowed ciphers
# 1. Chacha20-Poly1305 - Authenticated encryption, message length encrypted
# 2. AES-GCM - Authenticated encryption, message length is Additional Data
# 3. AES-CTR - Confidentiality only, works better with flawed Encrypt-and-MAC
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

# Specifies the available MAC (message authentication code) algorithms.
# 1. Encrypt-then-MAC with at least 128 bit tags and keys - provable security
# 2. Encrypt-and-MAC with at least 128 bit tags and keys - no security proof
#    probably fine with a CTR cipher, don't use them with CBC
MACs umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512

#Allow Forwarding
GatewayPorts yes
X11Forwarding yes

#Privilege Separation
UsePrivilegeSeparation yes
StrictModes yes

#Print/Logs
PrintMotd yes
SyslogFacility AUTH
LogLevel INFO

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

#SFTP
Subsystem sftp /usr/lib/openssh/sftp-server